import type { IMessage } from '@/refactoring/modules/chat/types/IChat'

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Å–ø–∏—Å–∫–µ —á–∞—Ç–æ–≤
 * –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ—Ç –¥–ª–∏–Ω—É –¥–æ 65 —Å–∏–º–≤–æ–ª–æ–≤ –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –º–Ω–æ–≥–æ—Ç–æ—á–∏–µ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
 * @param content - —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
 * @param maxLength - –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 65)
 */
export function formatMessagePreview(content: string, maxLength: number = 65): string {
    const cleanContent = content.trim().replace(/\s+/g, ' ')

    if (cleanContent.length <= maxLength) {
        return cleanContent
    }

    return cleanContent.slice(0, maxLength) + '...'
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —É—á–µ—Ç–æ–º –≤–ª–æ–∂–µ–Ω–∏–π
 * @param message - –æ–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
 */
export function getMessageDisplayText(message: IMessage): string {
    // –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–µ–∫—Å—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
    if (message.content && message.content.trim()) {
        return message.content.trim()
    }

    // –ï—Å–ª–∏ –µ—Å—Ç—å –≤–ª–æ–∂–µ–Ω–∏—è, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∏—Ö
    if (message.attachments && message.attachments.length > 0) {
        const count = message.attachments.length
        if (count === 1) {
            return 'üìé –§–∞–π–ª'
        }
        return `üìé ${count} —Ñ–∞–π–ª–∞`
    }

    // –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ—Ç
    return ''
}

