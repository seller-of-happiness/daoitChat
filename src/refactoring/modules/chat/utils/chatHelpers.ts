/**
 * –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —á–∞—Ç–∞–º–∏
 * –û–±–Ω–æ–≤–ª–µ–Ω—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π API
 */

import type { IUser, IChat, IChatMember } from '../types/IChat'
import { ChatAdapter } from '../types/IChat'

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏–Ω–∏—Ü–∏–∞–ª—ã –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏—è —á–∞—Ç–∞ –∏–ª–∏ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * –û–±–Ω–æ–≤–ª–µ–Ω–æ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
 */
export function generateChatInitials(name: string): string {
    if (!name?.trim()) return '??'

    const cleanName = name.trim()
    const parts = cleanName.split(' ').filter(Boolean)

    if (parts.length === 1) {
        // –î–ª—è –æ–¥–Ω–æ–≥–æ —Å–ª–æ–≤–∞ –±–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 2 —Å–∏–º–≤–æ–ª–∞
        return parts[0].slice(0, 2).toUpperCase()
    }

    if (parts.length >= 2) {
        // –î–ª—è —Ä—É—Å—Å–∫–∏—Ö –∏–º–µ–Ω: –µ—Å–ª–∏ –ø–µ—Ä–≤–æ–µ —Å–ª–æ–≤–æ –ø–æ—Ö–æ–∂–µ –Ω–∞ –∏–º—è, –∞ –≤—Ç–æ—Ä–æ–µ –Ω–∞ —Ñ–∞–º–∏–ª–∏—é
        // —Ç–æ –±–µ—Ä–µ–º –∏–Ω–∏—Ü–∏–∞–ª—ã –≤ –ø–æ—Ä—è–¥–∫–µ –ò–º—è + –§–∞–º–∏–ª–∏—è
        const firstName = parts[0]
        const lastName = parts[1]

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –∏–º–µ–Ω–µ–º –∏ —Ñ–∞–º–∏–ª–∏–µ–π
        const isLikelyNameSurname =
            firstName.length <= 15 &&
            lastName.length <= 20 &&
            !/^\d+$/.test(firstName) &&
            !/^\d+$/.test(lastName)

        if (isLikelyNameSurname) {
            return (firstName[0] + lastName[0]).toUpperCase()
        }

        // –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤ (–Ω–∞–∑–≤–∞–Ω–∏—è –≥—Ä—É–ø–ø, –∫–∞–Ω–∞–ª–æ–≤ –∏ —Ç.–¥.)
        return (parts[0][0] + parts[1][0]).toUpperCase()
    }

    return '??'
}

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏–Ω–∏—Ü–∏–∞–ª—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã API
 */
export function generateUserInitials(user: IUser): string {
    if (!user) return '??'

    // –ï—Å–ª–∏ –µ—Å—Ç—å –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—è - –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏—Ö
    if (user.first_name && user.last_name) {
        return (user.first_name[0] + user.last_name[0]).toUpperCase()
    }

    // –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ –∏–º—è
    if (user.first_name) {
        return user.first_name.slice(0, 2).toUpperCase()
    }

    // –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ —Ñ–∞–º–∏–ª–∏—è
    if (user.last_name) {
        return user.last_name.slice(0, 2).toUpperCase()
    }

    // –§–æ–ª–ª–±–µ–∫ –Ω–∞ –ø–æ–ª–Ω–æ–µ –∏–º—è –∏–ª–∏ –¥—Ä—É–≥–∏–µ –ø–æ–ª—è
    const fallbackName = user.full_name || user.user_name || user.username || user.email
    if (fallbackName) {
        return generateChatInitials(fallbackName)
    }

    return '??'
}

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏–Ω–∏—Ü–∏–∞–ª—ã –¥–ª—è —á–∞—Ç–∞ —Å —É—á–µ—Ç–æ–º –µ–≥–æ —Ç–∏–ø–∞ –∏ –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
 */
export function generateChatInitialsForChat(chat: IChat, currentUserId?: string): string {
    if (!chat) return '??'

    // –î–ª—è –¥–∏–∞–ª–æ–≥–æ–≤ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª—ã —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞
    if ((chat.type === 'direct' || chat.type === 'dialog') && currentUserId) {
        const companion = ChatAdapter.getDialogCompanion(chat, currentUserId)
        if (companion && companion.user) {
            return generateUserInitials(companion.user)
        }
    }

    // –î–ª—è –≥—Ä—É–ø–ø –∏ –∫–∞–Ω–∞–ª–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —á–∞—Ç–∞
    if (chat.title) {
        return generateChatInitials(chat.title)
    }

    // –§–æ–ª–ª–±–µ–∫ –Ω–∞ —Ç–∏–ø —á–∞—Ç–∞
    switch (chat.type) {
        case 'group':
            return '–ì–†'
        case 'channel':
            return '–ö–ù'
        case 'dialog':
        case 'direct':
            return '–î–ò'
        default:
            return '??'
    }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —á–∞—Ç–∞
 */
export function getChatDisplayTitle(chat: IChat, currentUserId?: string): string {
    if (!chat) return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —á–∞—Ç'

    // –î–ª—è –¥–∏–∞–ª–æ–≥–æ–≤ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–º—è —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞
    if ((chat.type === 'direct' || chat.type === 'dialog') && currentUserId) {
        const companion = ChatAdapter.getDialogCompanion(chat, currentUserId)
        if (companion && companion.user) {
            return ChatAdapter.getChatDisplayName(companion.user)
        }
    }

    // –î–ª—è –≥—Ä—É–ø–ø –∏ –∫–∞–Ω–∞–ª–æ–≤ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ
    return chat.title || `${getReadableChatType(chat.type)} #${chat.id}`
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —á–∏—Ç–∞–µ–º–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–∏–ø–∞ —á–∞—Ç–∞
 */
export function getReadableChatType(type: string): string {
    switch (type) {
        case 'dialog':
        case 'direct':
            return '–î–∏–∞–ª–æ–≥'
        case 'group':
            return '–ì—Ä—É–ø–ø–∞'
        case 'channel':
            return '–ö–∞–Ω–∞–ª'
        default:
            return '–ß–∞—Ç'
    }
}

/**
 * –°–æ–∑–¥–∞–µ—Ç URL —Å –±–∞–∑–æ–≤—ã–º –ø—É—Ç–µ–º
 */
export function withBase(path: string | null): string {
    if (!path) return ''
    if (path.startsWith('http')) return path

    const base = ((import.meta as any).env?.BASE_URL as string) || '/'
    return `${base.replace(/\/$/, '')}${path}`
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –º–æ–∂–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ –≤ —á–∞—Ç–µ
 */
export function canUserPerformAction(
    chat: IChat,
    userId: string,
    action: 'invite' | 'remove' | 'edit' | 'delete',
): boolean {
    if (!chat || !userId) {
        return false
    }

    // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º ID –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    const normalizedUserId = String(userId).trim()

    // –ü–æ–ª—É—á–∞–µ–º ID —Å–æ–∑–¥–∞—Ç–µ–ª—è –∏–∑ —Ä–∞–∑–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –ø–æ–ª–µ–π
    const creatorId = String(
        chat.created_by?.id || 
        chat.created_by?.uuid || 
        (chat as any).created_by_id || 
        chat.owner || 
        '',
    ).trim()


    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞—Ç–µ–ª—è —á–∞—Ç–∞ - —É —Å–æ–∑–¥–∞—Ç–µ–ª—è –≤—Å–µ –ø—Ä–∞–≤–∞
    if (normalizedUserId && creatorId && normalizedUserId === creatorId) {
        return true
    }

    // –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å—Ä–µ–¥–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    const memberInfo = chat.members?.find((member) => {
        const memberId = String(member.user?.id || member.user?.uuid || '').trim()
        const memberUuid = String(member.user_uuid || '').trim()

        return memberId === normalizedUserId || memberUuid === normalizedUserId
    })

    const isMember = !!memberInfo
    const isAdmin = memberInfo?.is_admin || false


    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω —Å—Ä–µ–¥–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    if (!isMember) {
        return false
    }

    switch (action) {
        case 'invite':
            // –ü—Ä–∏–≥–ª–∞—à–∞—Ç—å –º–æ–≥—É—Ç –≤—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –≤ –≥—Ä—É–ø–ø–∞—Ö, —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã –≤ –∫–∞–Ω–∞–ª–∞—Ö
            const canInvite = chat.type === 'channel' ? isAdmin : true
            return canInvite

        case 'remove':
            // –£–¥–∞–ª—è—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –º–æ–≥—É—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã
            return isAdmin

        case 'edit':
            // –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —á–∞—Ç –º–æ–≥—É—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã
            return isAdmin

        case 'delete':
            // –£–¥–∞–ª—è—Ç—å —á–∞—Ç –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å
            const canDelete = normalizedUserId === creatorId
            return canDelete

        default:
            return false
    }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á–∞—Ç–µ
 */
export function getUserChatStatus(
    chat: IChat,
    userId: string,
): 'owner' | 'admin' | 'member' | 'not_member' {
    if (!chat || !userId) return 'not_member'

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–∑–¥–∞—Ç–µ–ª–µ–º
    const creatorId = String(
        chat.created_by?.id || 
        chat.created_by?.uuid || 
        (chat as any).created_by_id || 
        chat.owner || 
        '',
    ).trim()
    if (creatorId === userId) return 'owner'

    // –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å—Ä–µ–¥–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    const member = chat.members?.find((m) => m.user?.id === userId)
    if (!member) return 'not_member'

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    return member.is_admin ? 'admin' : 'member'
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
 */
export function formatMembersList(members: IChatMember[], maxCount: number = 3): string {
    if (!members || members.length === 0) return '–ù–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤'

    const displayMembers = members.slice(0, maxCount)
    const names = displayMembers.map((member) => ChatAdapter.getChatDisplayName(member.user))

    let result = names.join(', ')

    if (members.length > maxCount) {
        const remaining = members.length - maxCount
        result += ` –∏ –µ—â—ë ${remaining}`
    }

    return result
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ —á–∞—Ç–µ
 */
export function getLastActivityInfo(chat: IChat): { text: string; timestamp: string | null } {
    // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ > –≤—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è
    if (chat.last_message) {
        const messageText = chat.last_message.content?.trim() || 'üìé –§–∞–π–ª'
        return {
            text: messageText.length > 50 ? messageText.slice(0, 50) + '...' : messageText,
            timestamp: chat.last_message.created_at,
        }
    }

    if (chat.created_at) {
        return {
            text: '–ß–∞—Ç —Å–æ–∑–¥–∞–Ω',
            timestamp: chat.created_at,
        }
    }

    return {
        text: '–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏',
        timestamp: null,
    }
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω—É–∂–Ω–æ –ª–∏ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
 */
export function shouldShowUnreadIndicator(chat: IChat): boolean {
    return (chat.unread_count || 0) > 0
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å—á–µ—Ç—á–∏–∫ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
 */
export function formatUnreadCount(count: number): string {
    if (count <= 0) return ''
    if (count > 99) return '99+'
    return String(count)
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Å–æ–∑–¥–∞–ª –ª–∏ —Ç–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–∞–Ω–Ω—ã–π —á–∞—Ç/–≥—Ä—É–ø–ø—É
 * @param chat - –æ–±—ä–µ–∫—Ç —á–∞—Ç–∞
 * @param currentUserId - ID —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @returns true, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–ª —á–∞—Ç
 */
export function isUserChatCreator(chat: IChat | null, currentUserId: string | null): boolean {
    if (!chat || !currentUserId) {
        return false
    }

    // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º ID –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    const normalizedUserId = String(currentUserId).trim()

    // –ü–æ–ª—É—á–∞–µ–º ID —Å–æ–∑–¥–∞—Ç–µ–ª—è –∏–∑ —Ä–∞–∑–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –ø–æ–ª–µ–π
    // –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º –∫–∞–∫ –Ω–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É (created_by.id), —Ç–∞–∫ –∏ —Å—Ç–∞—Ä—É—é (created_by_id, owner)
    const creatorId = String(
        chat.created_by?.id || 
        chat.created_by?.uuid || 
        (chat as any).created_by_id || 
        chat.owner || 
        ''
    ).trim()

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    const isCreator: boolean = !!(normalizedUserId && creatorId && normalizedUserId === creatorId)
    
    return isCreator
}
